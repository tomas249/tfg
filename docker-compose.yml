version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.api
    container_name: prediction_api
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PW=postgres
      - POSTGRES_DB=mydb
    ports:
      - "4001:8000"
    depends_on:
      - rabbitmq
      - postgres

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile.worker
    container_name: prediction_worker
    command: ["python", "-u", "worker.py"]
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PW=postgres
      - POSTGRES_DB=mydb
    depends_on:
      - rabbitmq
      - postgres
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    ports:
      - "4000:80"
    depends_on:
      - api

volumes:
  pg_data:
