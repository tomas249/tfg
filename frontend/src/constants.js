export const NEUROPILS = [
  "AVLP",
  "LAL",
  "AL",
  "SMP",
  "MB_ML",
  "CRE",
  "SLP",
  "GNG",
  "EB",
  "PRW",
  "MB_VL",
  "GA",
  "AOTU",
  "SIP",
  "LA",
  "FLA",
  "MB_PED",
  "SAD",
  "AMMC",
  "PVLP",
  "LO",
  "LOP",
  "PLP",
  "ME",
  "MB_CA",
  "LH",
  "SPS",
  "IPS",
  "SCL",
  "ICL",
  "NO",
  "WED",
  "VES",
  "IB",
  "ATL",
  "FB",
  "EPA",
  "GOR",
  "PB",
  "AME",
  "CAN",
  "OCG",
  "BU",
];
export const neuropilOptions = NEUROPILS.map((n) => ({ label: n, value: n }));

export const NEURON_FEATURES = [
  {
    label: "Length (nm)",
    type: "number",
    map: (v) => ({ length_nm: Number(v) }),
  },
  { label: "Size (nm)", type: "number", map: (v) => ({ size_nm: Number(v) }) },
  { label: "Area (nm)", type: "number", map: (v) => ({ area_nm: Number(v) }) },
  { label: "x", type: "number", map: (v) => ({ centroid_x: Number(v) }) },
  { label: "y", type: "number", map: (v) => ({ centroid_y: Number(v) }) },
  { label: "z", type: "number", map: (v) => ({ centroid_z: Number(v) }) },
  {
    label: "Side",
    type: "select",
    options: [
      { label: "Center", value: "center" },
      { label: "Left", value: "left" },
      { label: "Right", value: "right" },
    ],
    map: (v) => ({
      side_center: v === "center" ? 1 : 0,
      side_left: v === "left" ? 1 : 0,
      side_right: v === "right" ? 1 : 0,
    }),
  },
  {
    label: "Flow",
    type: "select",
    options: [
      { label: "Afferent", value: "afferent" },
      { label: "Efferent", value: "efferent" },
      { label: "Intrinsic", value: "intrinsic" },
    ],
    map: (v) => ({
      flow_afferent: v === "afferent" ? 1 : 0,
      flow_efferent: v === "efferent" ? 1 : 0,
      flow_intrinsic: v === "intrinsic" ? 1 : 0,
    }),
  },
  {
    label: "Input Neuropil",
    type: "select",
    options: neuropilOptions,
    map: (v) => ({ input_neuropil: v }),
  },
  {
    label: "Output Neuropil",
    type: "select",
    options: neuropilOptions,
    map: (v) => ({ output_neuropil: v }),
  },
  {
    label: "Input Synapses Count",
    type: "number",
    map: (v) => ({ input_synapses_count: Number(v) }),
  },
  {
    label: "Output Synapses Count",
    type: "number",
    map: (v) => ({ output_synapses_count: Number(v) }),
  },
  {
    label: "Input Partners Count",
    type: "number",
    map: (v) => ({ input_partners_count: Number(v) }),
  },
  {
    label: "Output Partners Count",
    type: "number",
    map: (v) => ({ output_partners_count: Number(v) }),
  },
];

export const PREDICTION_FEATURES = [
  { label: "ID", key: "id" },
  { label: "Super Class", key: "pred_super_class" },
  { label: "Primary Type", key: "pred_primary_type" },
  { label: "Neurotransmitter", key: "pred_nt_type" },
  { label: "Connectivity tag", key: "pred_connectivity_tag" },
];
